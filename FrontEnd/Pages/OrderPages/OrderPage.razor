@page "/order"
@using FrontEnd.Services
@using Domain
@inject FrontEndToDispatchGateway _gateway 
@inject NavigationManager _navigationManager
@inject FrontEndToDatabaseGateway _frontEndToDatabaseGateway
@inject FrontEndToDispatchGateway _frontEndToDispatchGateway
@inject Domain.ConvertAddressToGeoLocation converter

<div class="quick-look">
    <div class="status-bar" >
        <b>Management Page</b>
    </div>
    @if (connection)
    {
        <div class="connection-bar" data-hover="Database: Connected">
            <span class="oi oi-circle-check" style="color: #08af08"></span>
        </div>
    }
    else
    {
        <div class="connection-bar" data-hover="Database: No Connection">
            <span class="oi oi-circle-x" style="color: #FC401E"></span>
        </div>
    }

</div>

<div class="content">
    <div class="sub-container"> 
        <div class="title"> Order Manager</div>

        <div class="side-bar"> 

            <div class="input">
                <b>Customer Name: </b>
                <RadzenTextBox id="CUST_NAME" Style="width: 190px" Placeholder="..." AutoComplete="false" @oninput=@(e => CustomerName = e.Value.ToString()) />
                <br />
                <b>Address: </b> 
                <RadzenTextBox id="ADDRESS" Style="width: 190px" Placeholder="..." AutoComplete="false" @oninput=@(e => DeliveryAddress = e.Value.ToString()) />
                <br />
@*                <RadzenButton id="ORDER_SUBMIT" Click=@(args => makeOrder()) Style="width: 190px" Text="Create Order" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
*@            
                <button> Create Order </button>
            </div>

            <div class="input">
                <b>Order Id: </b>
                <RadzenTextBox id="CUST_NAME" Style="width: 190px" Placeholder="..." AutoComplete="false" @oninput=@(e => CustomerName = e.Value.ToString()) />  
                <br />
                <RadzenButton id="ORDER_SUBMIT" Click=@(args => makeOrder()) Style="width: 190px" Text="Cancel Order" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
            </div>

        </div>
        
        <div class="info-cards">
              <ul class="drone-fleet">
                @if (Fleet != null)
                {
                    @foreach (var drone in Fleet)
                    {
                        <!--Creates a block for each drone with id, status, more info button and a drone img-->
                        <li style="background-image: url('../images/drone.jpg')">
                            <div class="drone-status">
                                <span class="title" >ID: 
                                    <br> @drone.BadgeNumber.ToString().Substring(0, 4)... <br>
                                </span>
                                <span class="price" style="background-color: darkblue">@drone.State</span>
                               @* <span class="more">
                                    <RadzenButton style="background-color: #3b3b3b" Icon="add_circle_outline" Click=@(args => GoToDrone(drone)) />
                                </span>*@
                            </div>
                        </li>
                    }
                }
            </ul>


        </div>
    </div>

    <div class="sub-container"> 
        <div class="side-bar">
            <div class="title">Drone Manager</div>

        </div>
        <div class="info-cards">
          
        
        </div>

    </div>
</div>






@*<div class="right">
    <b>Customer Name: </b>
    <RadzenTextBox id="CUST_NAME" Style="width: 200px" Placeholder="..." AutoComplete="false" @oninput=@(e => CustomerName = e.Value.ToString()) />
    <br />
    <b>Address: </b> 
    <RadzenTextBox id="ADDRESS" Style="width: 200px" Placeholder="..." AutoComplete="false" @oninput=@(e => DeliveryAddress = e.Value.ToString()) />
    <br />
    <RadzenButton id="ORDER_SUBMIT" Click=@(args => makeOrder()) Style="width: 200px" Text="Create Order" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
    <RadzenButton id="ADD_DRONE" Click=@(args => AddDrone()) Style="width: 200px" Text="ADD DRONE" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />

</div>*@
